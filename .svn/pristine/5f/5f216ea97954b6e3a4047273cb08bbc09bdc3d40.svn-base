const mongoose = require( "mongoose" );

const Shares = mongoose.model( "Shares" );

const add = async ( data ) => {    
	//console.log('-----------data1'+JSON.stringify(data))
    const shares = new Shares( data );
    //user.setPass( data.password ); //Change user passwor to MD5
    return await shares.save();
};

// const editConfig = async ( id, data ) => {   
// 	console.log('-----------call ')
// 	console.log('-----------id>>>>'+id+'date >>> '+JSON.stringify(data))
//     if(data && id) {
//         try {
//             var config = {
//                 value : data.value,
//                 description : data.description
//             };
//             var configData = await Config.updateOne({ _id: id }, config, {omitUndefined:true});
//             if(configData.n && configData.nModified){
//                 return findConfig(id);
//             }else if(configData.n == 0){
//                 return 'Not found:('
//             }else{
//                 return 'Not update:)'
//             }
//         } catch (e) {
//             console.error(e);
//             return e;
//         }
//     }else{
//         return null;
//     }
// };

// // const deleteUser = ( user ) => user.remove();

const deleteConfig = async (id) => {
    var shareData = await Shares.deleteOne({ _id: id });
    //return shareData;
    if(shareData.n && shareData.deletedCount){
        return 'Deleted successfully';
    }else if(shareData.n == 0){
        return 'Not found:('
    }else{
        return 'Not update:)'
    }
}
const findConfig = (id) => {
    try {
        var data;
        if(id){
            data = Shares.findById(id);
        }else{
            data = Shares.find();
        }
        return data;
    } catch (e) {
        console.error(e);
    }
    
}

module.exports = {
    add,
    // editConfig,
     deleteConfig,
     findConfig,
};
